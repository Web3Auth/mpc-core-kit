(()=>{"use strict";var e,t,r={796:e=>{e.exports=require("@toruslabs/tss-lib")}},s={};function i(e){var t=s[e];if(void 0!==t)return t.exports;var a=s[e]={exports:{}};return r[e](a,a.exports,i),a.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(r,s){if(1&s&&(r=this(r)),8&s)return r;if("object"==typeof r&&r){if(4&s&&r.__esModule)return r;if(16&s&&"function"==typeof r.then)return r}var a=Object.create(null);i.r(a);var o={};e=e||[null,t({}),t([]),t(t)];for(var n=2&s&&r;"object"==typeof n&&!~e.indexOf(n);n=t(n))Object.getOwnPropertyNames(n).forEach((e=>o[e]=()=>r[e]));return o.default=()=>r,i.d(a,o),a},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};(()=>{i.r(a),i.d(a,{BrowserStorage:()=>F,COREKIT_STATUS:()=>Q,CURVE:()=>w,DEFAULT_CHAIN_CONFIG:()=>s,DELIMITERS:()=>c,ERRORS:()=>u,FIELD_ELEMENT_HEX_LEN:()=>f,FactorKeyTypeShareDescription:()=>h,MAX_FACTORS:()=>S,MemoryStorage:()=>C,Point:()=>J,SCALAR_LEN:()=>g,SOCIAL_FACTOR_INDEX:()=>d,SOCIAL_TKEY_INDEX:()=>K,TssSecurityQuestion:()=>z,TssSecurityQuestionStore:()=>j,TssShareType:()=>y,USER_PATH:()=>n,VALID_SHARE_INDICES:()=>l,WEB3AUTH_NETWORK:()=>o,Web3AuthMPCCoreKit:()=>he,addFactorAndRefresh:()=>A,deleteFactorAndRefresh:()=>D,generateFactorKey:()=>x,generateTSSEndpoints:()=>N,getHashedPrivateKey:()=>M,getWebBrowserFactor:()=>q,keyToMnemonic:()=>B,mnemonicToKey:()=>U,parseToken:()=>R,scalarBNToBufferSEC1:()=>O,storageAvailable:()=>_,storeWebBrowserFactor:()=>L});const e=require("@toruslabs/constants"),t=require("@web3auth/base"),r=require("elliptic"),s={chainNamespace:t.CHAIN_NAMESPACES.EIP155,chainId:"0x5",rpcTarget:"https://rpc.ankr.com/eth_goerli",displayName:"Goerli Testnet",blockExplorer:"https://goerli.etherscan.io",ticker:"ETH",tickerName:"Ethereum",decimals:18},o={MAINNET:e.TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET,DEVNET:e.TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET},n={NEW:"NewAccount",EXISTING:"ExistingAccount",REHYDRATE:"RehydrateAccount",RECOVER:"RecoverAccount"};let h=function(e){return e.HashedShare="hashedShare",e.SecurityQuestions="tssSecurityQuestions",e.DeviceShare="deviceShare",e.SeedPhrase="seedPhrase",e.PasswordShare="passwordShare",e.SocialShare="socialShare",e.Other="Other",e}({});const c={Delimiter1:"",Delimiter2:"",Delimiter3:"",Delimiter4:""},u={TKEY_SHARES_REQUIRED:"required more shares",INVALID_BACKUP_SHARE:"invalid backup share"},d=1;let y=function(e){return e[e.DEVICE=2]="DEVICE",e[e.RECOVERY=3]="RECOVERY",e}({});const l=[y.DEVICE,y.RECOVERY],g=32,f=64,w=new r.ec("secp256k1"),S=10,K=1,p=require("@babel/runtime/helpers/defineProperty");var m=i.n(p);const E=require("@tkey-mpc/common-types"),v=require("@toruslabs/eccrypto"),I=require("@toruslabs/torus.js");var b=i.n(I);const T=require("bn.js");var P=i.n(T);const x=()=>{const e=new(P())((0,v.generatePrivate)());return{private:e,pub:(0,E.getPubKeyPoint)(e)}},N=(e,t,r,s)=>{const i=[],a=[],o=[],n=[];for(let h=0;h<t;h++)if(o.push(h),h===r)i.push(null),a.push(null);else{const t=s[h]-1;i.push(e[t]),a.push(new URL(e[t]).origin),n.push(s[h])}return{endpoints:i,tssWSEndpoints:a,partyIndexes:o,nodeIndexesReturned:n}};function _(e){let t;try{t="localStorage"===e?window.localStorage:window.sessionStorage;const r="__storage_test__";return t.setItem(r,r),t.removeItem(r),!0}catch(e){return!1}}function R(e){const t=e.split(".")[1].replace("-","+").replace("_","/");return JSON.parse(atob(t||""))}async function k(e,t,r,s,i){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const{tssShare:o,tssIndex:n}=await e.getTSSShare(s),h=await e._getRssNodeDetails(),{serverEndpoints:c,serverPubKeys:u,serverThreshold:d}=h,y=(0,E.randomSelection)(new Array(h.serverEndpoints.length).fill(null).map(((e,t)=>t+1)),Math.ceil(h.serverEndpoints.length/2)),l=e.serviceProvider.getVerifierNameVerifierId();await e._refreshTSSShares(a,o,n,t,r,l,{selectedServers:y,serverEndpoints:c,serverPubKeys:u,serverThreshold:d,authSignatures:i})}async function A(e,t,r,s,i){if(!e)throw new Error("tkey does not exist, cannot add factor pub");if(-1===l.indexOf(r))throw new Error(`invalid new share index: must be one of ${l}`);if(!e.metadata.factorPubs||!Array.isArray(e.metadata.factorPubs[e.tssTag]))throw new Error(`factorPubs for tssTag = "${e.tssTag}" does not exist`);const a=e.metadata.factorPubs[e.tssTag],o=a.concat([t]),n=a.map((t=>e.getFactorEncs(t).tssIndex)).concat([r]);await k(e,o,n,s,i)}async function D(e,t,r,s){if(!e)throw new Error("tkey does not exist, cannot add factor pub");if(!e.metadata.factorPubs||!Array.isArray(e.metadata.factorPubs[e.tssTag]))throw new Error(`factorPubs for tssTag = "${e.tssTag}" does not exist`);const i=e.metadata.factorPubs[e.tssTag],a=i.findIndex((e=>e.x.eq(t.x)));if(-1===a)throw new Error(`factorPub ${t} does not exist`);const o=i.slice();o.splice(a,1);const n=o.map((t=>e.getFactorEncs(t).tssIndex));await k(e,o,n,r,s)}const M=(e,t)=>{const r=`${e}_${t}`;let s=(0,I.keccak256)(Buffer.from(r,"utf8"));return s=s.replace("0x",""),new(P())(s,"hex")};function O(e){return e.toArrayLike(Buffer,"be",g)}class C{constructor(){m()(this,"_store",{})}getItem(e){return this._store[e]||null}setItem(e,t){this._store[e]=t}removeItem(e){delete this._store[e]}clear(){this._store={}}}class F{constructor(e,t){m()(this,"storage",void 0),m()(this,"_storeKey",void 0),this.storage=t,this._storeKey=e;try{t.getItem(e)||this.resetStore()}catch(e){}}static getInstance(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"local";if(!this.instance){let r;if("local"===t&&_("localStorage")?r=localStorage:"session"===t&&_("sessionStorage")?r=sessionStorage:"memory"===t?r=new C:"object"==typeof t&&(r=t),!r)throw new Error("No valid storage available");this.instance=new this(e,r)}return this.instance}toJSON(){const e=this.storage.getItem(this._storeKey);if(!e)throw new Error(`storage ${this._storeKey} is null`);return e}resetStore(){const e=this.getStore();return this.storage.setItem(this._storeKey,JSON.stringify({})),e}getStore(){return JSON.parse(this.storage.getItem(this._storeKey)||"{}")}get(e){return JSON.parse(this.storage.getItem(this._storeKey)||"{}")[e]}set(e,t){const r=JSON.parse(this.storage.getItem(this._storeKey)||"{}");r[e]=t,this.storage.setItem(this._storeKey,JSON.stringify(r))}remove(e){const t=JSON.parse(this.storage.getItem(this._storeKey)||"{}");delete t[e],this.storage.setItem(this._storeKey,JSON.stringify(t))}}async function L(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"local";const s=t.tKey.getMetadata(),i=F.getInstance("mpc_corekit_store",r),a=s.pubKey.x.toString(16,f);i.set(a,JSON.stringify({factorKey:e.toString("hex").padStart(64,"0")}))}async function q(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"local";const r=e.tKey.getMetadata(),s=F.getInstance("mpc_corekit_store",t),i=r.pubKey.x.toString(16,f),a=s.get(i);return JSON.parse(a||"{}").factorKey}m()(F,"instance",void 0);const V=require("@tkey-mpc/share-serialization");function U(e){return V.ShareSerializationModule.deserializeMnemonic(e).toString("hex")}function B(e){const t=new(P())(e,"hex");return V.ShareSerializationModule.serializeMnemonic(t)}const $=require("@babel/runtime/helpers/objectSpread2");var H=i.n($);const G=w.g.mul(new(P())(0));class J{constructor(e){m()(this,"p",void 0),this.p=e}static fromPrivateKey(e){const t=w.keyFromPrivate(e.toString("hex")).getPublic();return new J(t)}static fromTkeyPoint(e){const t=w.keyFromPublic({x:e.x.toString("hex"),y:e.y.toString("hex")}).getPublic();return new J(t)}static fromBufferSEC1(e){if(1===e.length&&0===e[0])return new J(G);const t=w.keyFromPublic(e.toString("hex"),"hex").getPublic();return new J(t)}toTkeyPoint(){if(this.p.isInfinity())throw new Error("Point at infinity can't be represented as tkey point.");const e=this.p.getX().toString("hex"),t=this.p.getY().toString("hex");return new E.Point(e,t)}toBufferSEC1(e){return this.p.isInfinity()?Buffer.from("00","hex"):Buffer.from(this.p.encode("hex",e),"hex")}equals(e){return this.p.eq(e.p)}}class j{constructor(e,t,r){m()(this,"shareIndex",void 0),m()(this,"factorPublicKey",void 0),m()(this,"question",void 0),this.shareIndex=e,this.factorPublicKey=t,this.question=r}static fromJSON(e){const{shareIndex:t,factorPublicKey:r,question:s}=e;return new j(t,r,s)}toJSON(){return{shareIndex:this.shareIndex,factorPublicKey:this.factorPublicKey,question:this.question}}}class z{constructor(){m()(this,"storeDomainName","tssSecurityQuestion")}async setSecurityQuestion(e){const{mpcCoreKit:t,question:r,answer:s,description:i}=e;let{shareType:a}=e;if(!t.tKey)throw new Error("Tkey not initialized, call init first.");if(!r||!s)throw new Error("question and answer are required");const o=`${this.storeDomainName}:${e.mpcCoreKit.tKey.tssTag}`;if(a){if(!l.includes(a))throw new Error(`invalid share type: must be one of ${l}`)}else a=y.RECOVERY;const n=t.tKey,c=n.metadata.getGeneralStoreDomain(o);if(c&&c.question)throw new Error("Security question already exists");const u=J.fromTkeyPoint(n.getKeyDetails().pubKey).toBufferSEC1(!0).toString("hex")+n.tssTag;let d=(0,I.keccak256)(Buffer.from(s+u,"utf8"));d=d.startsWith("0x")?d.slice(2):d;const g=new(P())(d,"hex"),f=H()({question:r},i);await t.createFactor({factorKey:g,shareType:a,shareDescription:h.SecurityQuestions,additionalMetadata:f});const w=(0,E.getPubKeyPoint)(g),S=J.fromTkeyPoint(w).toBufferSEC1(!0).toString("hex"),K=new j(a.toString(),S,r);return n.metadata.setGeneralStoreDomain(o,K.toJSON()),n.manualSync||await n._syncShareMetadata(),g.toString("hex").padStart(64,"0")}async changeSecurityQuestion(e){const{mpcCoreKit:t,newQuestion:r,newAnswer:s,answer:i}=e;if(!r||!s||!i)throw new Error("question and answer are required");const a=t.tKey,o=J.fromTkeyPoint(a.getKeyDetails().pubKey).toBufferSEC1(!0).toString("hex")+a.tssTag,n=`${this.storeDomainName}:${e.mpcCoreKit.tKey.tssTag}`,c=a.metadata.getGeneralStoreDomain(n);if(!c||!c.question)throw new Error("Security question does not exists");const u=j.fromJSON(c),d=i+o;let y=(0,I.keccak256)(Buffer.from(d,"utf8"));y=y.startsWith("0x")?y.slice(2):y;const l=new(P())(y,"hex"),g=J.fromTkeyPoint((0,E.getPubKeyPoint)(l));if(g.toBufferSEC1(!0).toString("hex")!==u.factorPublicKey)throw new Error("Invalid answer");const f=s+o;let w=(0,I.keccak256)(Buffer.from(f,"utf8"));w=w.startsWith("0x")?w.slice(2):w;const S=new(P())(w,"hex"),K=J.fromTkeyPoint((0,E.getPubKeyPoint)(S));await t.createFactor({factorKey:S,shareType:parseInt(u.shareIndex),shareDescription:h.SecurityQuestions}),t.state.factorKey.eq(l)&&await t.inputFactorKey(S),await t.deleteFactor(g.toTkeyPoint(),l),u.factorPublicKey=K.toBufferSEC1(!0).toString("hex"),u.question=r,a.metadata.setGeneralStoreDomain(n,u.toJSON()),a.manualSync||await a._syncShareMetadata()}async deleteSecurityQuestion(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!e.tKey)throw new Error("Tkey not initialized, call init first.");const r=`${this.storeDomainName}:${e.tKey.tssTag}`,s=e.tKey;if(t){const t=s.metadata.getGeneralStoreDomain(r);if(!t||!t.question)throw new Error("Security question does not exists");const i=j.fromJSON(t);i.factorPublicKey&&await e.deleteFactor(E.Point.fromCompressedPub(i.factorPublicKey))}s.metadata.deleteGeneralStoreDomain(r),s.manualSync||await s._syncShareMetadata()}async recoverFactor(e,t){if(!e.tKey)throw new Error("Tkey not initialized, call init first.");if(!t)throw new Error("question and answer are required");const r=e.tKey,s=`${this.storeDomainName}:${e.tKey.tssTag}`,i=r.metadata.getGeneralStoreDomain(s);if(!i||!i.question)throw new Error("Security question does not exists");const a=j.fromJSON(i),o=J.fromTkeyPoint(r.getKeyDetails().pubKey).toBufferSEC1(!0).toString("hex")+r.tssTag;let n=(0,I.keccak256)(Buffer.from(t+o,"utf8"));n=n.startsWith("0x")?n.slice(2):n;const h=new(P())(n,"hex");if(J.fromTkeyPoint((0,E.getPubKeyPoint)(h)).toBufferSEC1(!0).toString("hex")!==a.factorPublicKey)throw new Error("Invalid answer");return n}getQuestion(e){if(!e.tKey)throw new Error("Tkey not initialized, call init first.");const t=e.tKey,r=`${this.storeDomainName}:${e.tKey.tssTag}`,s=t.metadata.getGeneralStoreDomain(r);if(!s||!s.question)throw new Error("Security question does not exists");return j.fromJSON(s).question}}let Q=function(e){return e.NOT_INITIALIZED="NOT_INITIALIZED",e.INITIALIZED="INITIALIZED",e.REQUIRED_SHARE="REQUIRED_SHARE",e.LOGGED_IN="LOGGED_IN",e}({});const W=require("@tkey-mpc/core");var Y=i.n(W);const X=require("@tkey-mpc/service-provider-torus"),Z=require("@tkey-mpc/storage-layer-torus"),ee=require("@toruslabs/customauth"),te=require("@toruslabs/fetch-node-details"),re=require("@toruslabs/metadata-helpers"),se=require("@toruslabs/openlogin-session-manager"),ie=require("@toruslabs/tss-client"),ae=require("@web3auth-mpc/ethereum-provider"),oe=require("bowser");var ne=i.n(oe);class he{constructor(e){var r;if(m()(this,"state",{}),m()(this,"options",void 0),m()(this,"privKeyProvider",null),m()(this,"torusSp",null),m()(this,"storageLayer",null),m()(this,"tkey",null),m()(this,"sessionManager",void 0),m()(this,"currentStorage",void 0),m()(this,"nodeDetailManager",void 0),m()(this,"_storageBaseKey","corekit_store"),m()(this,"enableLogging",!1),m()(this,"ready",!1),m()(this,"getTssFactorPub",(()=>{if(this.checkReady(),!this.state.factorKey)throw new Error("factorKey not present");return this.tKey.metadata.factorPubs[this.tKey.tssTag].map((e=>J.fromTkeyPoint(e).toBufferSEC1(!0).toString("hex")))})),m()(this,"getPublic",(async()=>{let{tssPubKey:e}=this.state;return e.length===f+1&&(e=e.subarray(1)),e})),m()(this,"sign",(async e=>this.localSign(e))),m()(this,"localSign",(async e=>{let{tssShareIndex:t,tssPubKey:r}=this.state;const{torusNodeTSSEndpoints:s}=await this.nodeDetailManager.getNodeDetails({verifier:"test-verifier",verifierId:"test@example.com"});if(!this.state.factorKey)throw new Error("factorKey not present");const{tssShare:a}=await this.tKey.getTSSShare(this.state.factorKey),o=this.getTssNonce();if(!r||!s)throw new Error("tssPubKey or torusNodeTSSEndpoints not available");r.length===f+1&&(r=r.subarray(1));const n=`${`${this.verifier}${c.Delimiter1}${this.verifierId}`}${c.Delimiter2}default${c.Delimiter3}${o}${c.Delimiter4}`,{nodeIndexes:h}=await this.tKey.serviceProvider.getTSSPubKey(this.tKey.tssTag,this.tKey.metadata.tssNonces[this.tKey.tssTag]),{endpoints:u,tssWSEndpoints:d,partyIndexes:y,nodeIndexesReturned:l}=N(s,4,3,h),g=(0,re.keccak256)(Buffer.from((0,v.generatePrivate)().toString("hex")+Date.now(),"utf8")).toString("hex"),S=`${s[0]}/v1/clientWasm`,K=`${n}${g}`;let p;this.isNodejsOrRN(this.options.uxMode)?p=this.options.tssLib:(p=await Promise.resolve().then(i.t.bind(i,796,23)),await p.default(S));const[m]=await Promise.all([(0,ie.setupSockets)(d,g)]),E=O((0,ie.getDKLSCoeff)(!0,l,t).mul(a).umod(w.curve.n)).toString("base64");if(!K)throw new Error(`sessionAuth does not exist ${K}`);const I=await this.getSigningSignatures(e.toString("hex"));if(!I)throw new Error(`Signature does not exist ${I}`);const b=new ie.Client(K,3,y,u,m,E,r.toString("base64"),!0,S),T={};for(let e=0;e<l.length;e++){const r=l[e];T[r]=(0,ie.getDKLSCoeff)(!1,l,t,r).toString("hex")}b.precompute(p,{signatures:I,server_coeffs:T}),await b.ready().catch((e=>{throw b.cleanup(p,{signatures:I,server_coeffs:T}),e}));let{r:P,s:x,recoveryParam:_}=await b.sign(p,Buffer.from(e).toString("base64"),!0,"","keccak256",{signatures:I});return _<27&&(_+=27),b.cleanup(p,{signatures:I,server_coeffs:T}),{v:_,r:O(P),s:O(x)}})),e.chainConfig||(e.chainConfig=s),e.chainConfig.chainNamespace!==t.CHAIN_NAMESPACES.EIP155)throw new Error("You must specify a eip155 chain config.");if(!e.web3AuthClientId)throw new Error("You must specify a web3auth clientId.");const a=this.isNodejsOrRN(e.uxMode);if(a&&["local","session"].includes(e.storageKey.toString()))throw new Error(`${e.uxMode} mode do not storage of type : ${e.storageKey}`);if(a&&!e.tssLib)throw new Error(`${e.uxMode} mode requires tssLib`);e.enableLogging?(t.log.enableAll(),this.enableLogging=!0):t.log.setLevel("error"),"boolean"!=typeof e.manualSync&&(e.manualSync=!1),e.web3AuthNetwork||(e.web3AuthNetwork=o.MAINNET),e.storageKey||(e.storageKey="local"),e.sessionTime||(e.sessionTime=86400),e.uxMode||(e.uxMode=ee.UX_MODE.REDIRECT),e.redirectPathName||(e.redirectPathName="redirect"),e.baseUrl||(e.baseUrl=a?"https://localhost":`${null===(r=window)||void 0===r?void 0:r.location.origin}/serviceworker`),e.disableHashedFactorKey||(e.disableHashedFactorKey=!1),e.hashedFactorNonce||(e.hashedFactorNonce=e.web3AuthClientId),this.options=e,this.currentStorage=F.getInstance(this._storageBaseKey,this.options.storageKey);const n=this.currentStorage.get("sessionId");this.sessionManager=new se.OpenloginSessionManager({sessionTime:this.options.sessionTime,sessionId:n}),this.nodeDetailManager=new te.NodeDetailManager({network:this.options.web3AuthNetwork,enableLogging:e.enableLogging})}get tKey(){if(null===this.tkey)throw new Error("Tkey not initialized");return this.tkey}get provider(){var e;return null!==(e=this.privKeyProvider)&&void 0!==e&&e.provider?this.privKeyProvider.provider:null}set provider(e){throw new Error("Not implemented")}get signatures(){var e;return null!==(e=this.state)&&void 0!==e&&e.signatures?this.state.signatures:[]}set signatures(e){throw new Error("Not implemented")}get metadataKey(){var e;return null!==(e=this.state)&&void 0!==e&&e.oAuthKey?this.state.oAuthKey:null}set metadataKey(e){throw new Error("Not implemented")}get status(){try{const{tkey:e}=this;return e?e.metadata?e.privKey&&this.state.factorKey?Q.LOGGED_IN:Q.REQUIRED_SHARE:Q.INITIALIZED:Q.NOT_INITIALIZED}catch(e){}return Q.NOT_INITIALIZED}get sessionId(){return this.sessionManager.sessionId}get verifier(){var e,t;return null!==(e=this.state.userInfo)&&void 0!==e&&e.aggregateVerifier?this.state.userInfo.aggregateVerifier:null!==(t=this.state)&&void 0!==t&&null!==(t=t.userInfo)&&void 0!==t&&t.verifier?this.state.userInfo.verifier:""}get verifierId(){var e;return null!==(e=this.state)&&void 0!==e&&null!==(e=e.userInfo)&&void 0!==e&&e.verifierId?this.state.userInfo.verifierId:""}get isRedirectMode(){return this.options.uxMode===ee.UX_MODE.REDIRECT}async init(){var e,t;let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{handleRedirectResult:!0};this.resetState(),void 0===r.rehydrate&&(r.rehydrate=!0);const s=await this.nodeDetailManager.getNodeDetails({verifier:"test-verifier",verifierId:"test@example.com"});if(!s)throw new Error("error getting node details, please try again!");this.torusSp=new X.TorusServiceProvider({useTSS:!0,customAuthArgs:{web3AuthClientId:this.options.web3AuthClientId,baseUrl:this.options.baseUrl,uxMode:this.isNodejsOrRN(this.options.uxMode)?ee.UX_MODE.REDIRECT:this.options.uxMode,network:this.options.web3AuthNetwork,redirectPathName:this.options.redirectPathName,locationReplaceOnRedirect:!0},nodeEndpoints:s.torusNodeEndpoints,nodePubKeys:s.torusNodePub.map((e=>({x:e.X,y:e.Y})))}),this.storageLayer=new Z.TorusStorageLayer({hostUrl:`${new URL(s.torusNodeEndpoints[0]).origin}/metadata`,enableLogging:this.enableLogging});const i=new V.ShareSerializationModule;this.tkey=new(Y())({enableLogging:this.enableLogging,serviceProvider:this.torusSp,storageLayer:this.storageLayer,manualSync:this.options.manualSync,modules:{shareSerialization:i}}),this.isRedirectMode?await this.tKey.serviceProvider.init({skipSw:!0,skipPrefetch:!0}):this.options.uxMode===ee.UX_MODE.POPUP&&await this.tKey.serviceProvider.init({}),this.ready=!0,r.handleRedirectResult&&this.options.uxMode===ee.UX_MODE.REDIRECT&&(null!==(e=window)&&void 0!==e&&e.location.hash.includes("#state")||null!==(t=window)&&void 0!==t&&t.location.hash.includes("#access_token"))?await this.handleRedirectResult():r.rehydrate&&this.sessionManager.sessionId&&(await this.rehydrateSession(),this.state.factorKey&&await this.setupProvider())}async loginWithOauth(e){if(this.checkReady(),this.isNodejsOrRN(this.options.uxMode))throw new Error(`Oauth login is NOT supported in ${this.options.uxMode}`);const r=this.tKey.serviceProvider;try{const t=e;if(e.subVerifierDetails){const t=await r.triggerLogin(e.subVerifierDetails);if(this.isRedirectMode)return;this.updateState({oAuthKey:this._getOAuthKey(t),userInfo:t.userInfo,signatures:this._getSignatures(t.sessionData.sessionTokenData)})}else if(t.subVerifierDetailsArray){const e=await r.triggerAggregateLogin({aggregateVerifierType:t.aggregateVerifierType||ee.AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID,verifierIdentifier:t.aggregateVerifierIdentifier,subVerifierDetailsArray:t.subVerifierDetailsArray});if(this.isRedirectMode)return;this.updateState({oAuthKey:this._getOAuthKey(e),userInfo:e.userInfo[0],signatures:this._getSignatures(e.sessionData.sessionTokenData)})}await this.setupTkey()}catch(e){if(t.log.error("login error",e),e instanceof W.CoreError&&1302===e.code)throw new Error(u.TKEY_SHARES_REQUIRED);throw new Error(e.message)}}async loginWithJWT(e){this.checkReady();const{verifier:r,verifierId:s,idToken:i}=e;try{let t;e.subVerifier?(t=await this.tKey.serviceProvider.customAuthInstance.getAggregateTorusKey(r,s,[{verifier:e.subVerifier,idToken:i,extraVerifierParams:e.extraVerifierParams}]),this.tKey.serviceProvider.verifierType="aggregate"):(t=await this.tKey.serviceProvider.customAuthInstance.getTorusKey(r,s,{verifier_id:s},i,H()(H()({},e.extraVerifierParams),e.additionalParams)),this.tKey.serviceProvider.verifierType="normal");const a=this._getOAuthKey(t);this.tKey.serviceProvider.postboxKey=new(P())(a,"hex"),this.tKey.serviceProvider.verifierName=r,this.tKey.serviceProvider.verifierId=s,this.updateState({oAuthKey:a,userInfo:H()(H()({},R(i)),{},{verifier:r,verifierId:s}),signatures:this._getSignatures(t.sessionData.sessionTokenData)}),await this.setupTkey()}catch(e){if(t.log.error("login error",e),e instanceof W.CoreError&&1302===e.code)throw new Error(u.TKEY_SHARES_REQUIRED);throw new Error(e.message)}}async handleRedirectResult(){this.checkReady();try{const e=await this.torusSp.customAuthInstance.getRedirectResult();if(e.method===ee.TORUS_METHOD.TRIGGER_LOGIN){const t=e.result;if(!t)throw new Error("Invalid login params passed");this.updateState({oAuthKey:this._getOAuthKey(t),userInfo:t.userInfo,signatures:this._getSignatures(t.sessionData.sessionTokenData)}),this.torusSp.verifierType="normal";const r=this.getUserInfo();this.torusSp.verifierName=r.verifier}else{if(e.method!==ee.TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN)throw new Error("Unsupported method type");{const t=e.result;if(!t)throw new Error("Invalid login params passed");this.updateState({oAuthKey:this._getOAuthKey(t),userInfo:t.userInfo[0],signatures:this._getSignatures(t.sessionData.sessionTokenData)}),this.torusSp.verifierType="aggregate";const r=this.getUserInfo();this.torusSp.verifierName=r.aggregateVerifier}}const t=this.getUserInfo();if(!this.state.oAuthKey)throw new Error("oAuthKey not present");this.torusSp.postboxKey=new(P())(this.state.oAuthKey,"hex"),this.torusSp.verifierId=t.verifierId,await this.setupTkey()}catch(e){throw t.log.error("error while handling redirect result",e),new Error(e.message)}}async inputFactorKey(e){this.checkReady();try{if(!this.tKey.privKey){const t=await this.getFactorKeyMetadata(e);await this.tKey.inputShareStoreSafe(t,!0)}await this.tKey.reconstructKey(),await this.finalizeTkey(e)}catch(e){if(t.log.error("login error",e),e instanceof W.CoreError&&1302===e.code)throw new Error(u.TKEY_SHARES_REQUIRED);throw new Error(e.message)}}getCurrentFactorKey(){if(this.checkReady(),!this.state.factorKey)throw new Error("factorKey not present");if(!this.state.tssShareIndex)throw new Error("TSS Share Type (Index) not present");try{return{factorKey:this.state.factorKey,shareType:this.state.tssShareIndex}}catch(e){throw t.log.error("state error",e),new Error(e.message)}}getTssPublicKey(){return this.checkReady(),this.tKey.getTSSPub()}async enableMFA(e){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.checkReady();const s=M(this.state.oAuthKey,this.options.hashedFactorNonce);if(!await this.checkIfFactorKeyValid(s)){if(this.tKey._localMetadataTransitions[0].length)throw new Error("CommitChanges are required before enabling MFA");throw new Error("MFA already enabled")}try{let t;if(this.isNodejsOrRN(this.options.uxMode))t={browserName:"Node Env",browserVersion:"",deviceName:"nodejs"};else{const e=ne().parse(navigator.userAgent);t={browserName:`${e.browser.name}`,browserVersion:e.browser.version,deviceName:e.os.name}}const i=new(P())(await this.createFactor({shareType:y.DEVICE,additionalMetadata:t}),"hex");L(i,this),await this.inputFactorKey(new(P())(i,"hex"));const a=(0,E.getPubKeyPoint)(s);if(await this.deleteFactor(a,s),await this.deleteMetadataShareBackup(s),r){return await this.createFactor(H()({shareType:y.RECOVERY},e))}return""}catch(e){throw t.log.error("error enabling MFA",e),new Error(e.message)}}async createFactor(e){this.checkReady();let{shareType:r,factorKey:s,shareDescription:i,additionalMetadata:a}=e;if(!l.includes(r))throw new Error(`invalid share type: must be one of ${l}`);s||(s=x().private),i||(i=h.Other),a||(a={});const o=(0,E.getPubKeyPoint)(s);if(this.getTssFactorPub().includes(J.fromTkeyPoint(o).toBufferSEC1(!0).toString("hex")))throw new Error("Factor already exists");try{return await this.copyOrCreateShare(r,o),await this.backupMetadataShare(s),await this.addFactorDescription(s,i,a),this.tKey.manualSync||await this.tKey._syncShareMetadata(),O(s).toString("hex")}catch(e){throw t.log.error("error creating factor",e),e}}async deleteFactor(e,t){if(!this.state.factorKey)throw new Error("Factor key not present");if(!this.tKey.metadata.factorPubs)throw new Error("Factor pubs not present");if((this.tKey.metadata.factorPubs[this.tKey.tssTag].length||0)<=1)throw new Error("Cannot delete last factor");const r=J.fromTkeyPoint(e),s=J.fromTkeyPoint((0,E.getPubKeyPoint)(this.state.factorKey));if(r.equals(s))throw new Error("Cannot delete current active factor");await D(this.tKey,e,this.state.factorKey,this.signatures);const i=r.toBufferSEC1(!0).toString("hex"),a=this.tKey.metadata.getShareDescription()[i];if(a&&a.forEach((async e=>{var t;await(null===(t=this.tKey)||void 0===t?void 0:t.deleteShareDescription(i,e))})),t){const e=new(P())(t,"hex");J.fromTkeyPoint((0,E.getPubKeyPoint)(e)).equals(r)&&await this.deleteMetadataShareBackup(e)}this.tKey.manualSync||await this.tKey._syncShareMetadata()}async logout(){this.sessionManager.sessionId&&await this.sessionManager.invalidateSession(),this.currentStorage.set("sessionId",""),this.resetState(),await this.init({handleRedirectResult:!1})}getUserInfo(){if(!this.state.userInfo)throw new Error("user is not logged in.");return this.state.userInfo}getKeyDetails(){this.checkReady();const e=this.tKey.getKeyDetails(),t=this.state.tssPubKey?this.tKey.getTSSPub():void 0,r=this.tKey.metadata.factorPubs?this.tKey.metadata.factorPubs[this.tKey.tssTag]:[];return{requiredFactors:e.requiredShares,threshold:e.threshold,totalFactors:r.length+1,shareDescriptions:this.tKey.getMetadata().getShareDescription(),metadataPubKey:e.pubKey,tssPubKey:t}}async commitChanges(){if(this.checkReady(),!this.state.factorKey)throw new Error("factorKey not present");try{await this.tKey._syncShareMetadata(),await this.tKey.syncLocalMetadataTransitions()}catch(e){throw t.log.error("sync metadata error",e),e}}async setManualSync(e){this.checkReady(),await this.tKey.syncLocalMetadataTransitions(),this.options.manualSync=e,this.tKey.manualSync=e}async importTssKey(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:y.DEVICE;if(!this.state.signatures)throw new Error("signatures not present");const s=new(P())(e,"hex");this.tKey.importTssKey({tag:this.tKey.tssTag,importKey:s,factorPub:t,newTSSIndex:r},{authSignatures:this.state.signatures})}async _UNSAFE_exportTssKey(){if(!this.state.factorKey)throw new Error("factorKey not present");if(!this.state.signatures)throw new Error("signatures not present");return(await this.tKey._UNSAFE_exportTssKey({factorKey:this.state.factorKey,authSignatures:this.state.signatures,selectedServers:[]})).toString("hex",f)}getTssNonce(){if(!this.tKey.metadata.tssNonces)throw new Error("tssNonce not present");return this.tKey.metadata.tssNonces[this.tKey.tssTag]}async setupTkey(){if(!this.state.oAuthKey)throw new Error("user not logged in");if(await this.isMetadataPresent(this.state.oAuthKey)){await this.tKey.initialize({neverInitializeNewKey:!0});const e=M(this.state.oAuthKey,this.options.hashedFactorNonce);if(await this.checkIfFactorKeyValid(e)&&!this.options.disableHashedFactorKey){const t=await this.getFactorKeyMetadata(e);await this.tKey.inputShareStoreSafe(t,!0),await this.tKey.reconstructKey(),await this.finalizeTkey(e)}}else{let e;if(this.options.disableHashedFactorKey){e=x().private;const t=M(this.state.oAuthKey,this.options.hashedFactorNonce);await this.deleteMetadataShareBackup(t)}else e=M(this.state.oAuthKey,this.options.hashedFactorNonce);const t=new(P())((0,v.generatePrivate)()),r=y.DEVICE,s=(0,E.getPubKeyPoint)(e);await this.tKey.initialize({useTSS:!0,factorPub:s,deviceTSSShare:t,deviceTSSIndex:r}),await this.tKey.reconstructKey(),await this.finalizeTkey(e),await this.backupMetadataShare(e),this.options.disableHashedFactorKey?await this.addFactorDescription(e,h.Other):await this.addFactorDescription(e,h.HashedShare)}}async finalizeTkey(e){const{tssIndex:t}=await this.tKey.getTSSShare(e),r=J.fromTkeyPoint(this.tKey.getTSSPub()).toBufferSEC1(!1);this.updateState({tssShareIndex:t,tssPubKey:r,factorKey:e}),this.tKey.manualSync||await this.tKey.syncLocalMetadataTransitions(),await this.setupProvider(),await this.createSession()}checkReady(){if(!this.ready)throw Error("MPC Core Kit not initialized, call init first!")}async rehydrateSession(){try{if(this.checkReady(),!this.sessionManager.sessionId)return{};const e=await this.sessionManager.authorizeSession(),t=new(P())(e.factorKey,"hex");if(!t)throw new Error("Invalid factor key");this.torusSp.postboxKey=new(P())(e.oAuthKey,"hex"),this.torusSp.verifierName=e.userInfo.aggregateVerifier||e.userInfo.verifier,this.torusSp.verifierId=e.userInfo.verifierId,this.torusSp.verifierType=e.userInfo.aggregateVerifier?"aggregate":"normal";const r=await this.getFactorKeyMetadata(t);await this.tKey.initialize({neverInitializeNewKey:!0}),await this.tKey.inputShareStoreSafe(r,!0),await this.tKey.reconstructKey(),this.updateState({factorKey:new(P())(e.factorKey,"hex"),oAuthKey:e.oAuthKey,tssShareIndex:e.tssShareIndex,tssPubKey:Buffer.from(e.tssPubKey.padStart(f,"0"),"hex"),signatures:e.signatures,userInfo:e.userInfo})}catch(e){t.log.error("error trying to authorize session",e)}}async createSession(){try{const e=se.OpenloginSessionManager.generateRandomSessionKey();this.sessionManager.sessionId=e;const{oAuthKey:t,factorKey:r,userInfo:s,tssShareIndex:i,tssPubKey:a}=this.state;if(!this.state.factorKey)throw new Error("factorKey not present");const{tssShare:o}=await this.tKey.getTSSShare(this.state.factorKey);if(!(t&&r&&o&&a&&s))throw new Error("User not logged in");const n={oAuthKey:t,factorKey:null==r?void 0:r.toString("hex"),tssShareIndex:i,tssPubKey:Buffer.from(a).toString("hex"),signatures:this.signatures,userInfo:s};await this.sessionManager.createSession(n),this.currentStorage.set("sessionId",e)}catch(e){t.log.error("error creating session",e)}}async isMetadataPresent(e){var t;const r=new(P())(e,"hex"),s=await(null===(t=this.tKey)||void 0===t?void 0:t.storageLayer.getMetadata({privKey:r}));return!!(s&&Object.keys(s).length>0&&"KEY_NOT_FOUND"!==s.message)}async checkIfFactorKeyValid(e){var r;this.checkReady();const s=await(null===(r=this.tKey)||void 0===r?void 0:r.storageLayer.getMetadata({privKey:e}));return!(!s||"KEY_NOT_FOUND"===s.message||"SHARE_DELETED"===s.message)&&(t.log.info("factorKeyMetadata",s),!0)}async getFactorKeyMetadata(e){var t;this.checkReady();const r=await(null===(t=this.tKey)||void 0===t?void 0:t.storageLayer.getMetadata({privKey:e}));if(!r||"KEY_NOT_FOUND"===r.message)throw new Error("no metadata for your factor key, reset your account");return E.ShareStore.fromJSON(r)}async copyOrCreateShare(e,t){if(this.checkReady(),!this.tKey.metadata.factorPubs||!Array.isArray(this.tKey.metadata.factorPubs[this.tKey.tssTag]))throw new Error("factorPubs does not exist, failed in copy factor pub");if(!this.tKey.metadata.factorEncs||"object"!=typeof this.tKey.metadata.factorEncs[this.tKey.tssTag])throw new Error("factorEncs does not exist, failed in copy factor pub");if(!this.state.factorKey)throw new Error("factorKey not present");if(-1===l.indexOf(e))throw new Error(`invalid new share index: must be one of ${l}`);if(this.tKey.metadata.factorPubs[this.tKey.tssTag].length>=S)throw new Error("Maximum number of factors reached");if(this.state.tssShareIndex!==e){if(!this.state.factorKey)throw new Error("factorKey not present");await A(this.tKey,t,e,this.state.factorKey,this.signatures);const{tssIndex:r}=await this.tKey.getTSSShare(this.state.factorKey);return void this.updateState({tssShareIndex:r})}if(!this.state.factorKey)throw new Error("factorKey not present");const{tssShare:r}=await this.tKey.getTSSShare(this.state.factorKey),s=this.tKey.metadata.factorPubs[this.tKey.tssTag].concat([t]),i=JSON.parse(JSON.stringify(this.tKey.metadata.factorEncs[this.tKey.tssTag]));i[t.x.toString(16,f)]={tssIndex:this.state.tssShareIndex,type:"direct",userEnc:await(0,E.encrypt)(J.fromTkeyPoint(t).toBufferSEC1(!1),O(r)),serverEncs:[]},this.tKey.metadata.addTSSData({tssTag:this.tKey.tssTag,factorPubs:s,factorEncs:i}),this.tKey.manualSync||await this.tKey._syncShareMetadata()}async getMetadataShare(){try{var e,r;const t=null===(e=this.tKey)||void 0===e?void 0:e.metadata.getLatestPublicPolynomial().getPolynomialID(),s=null===(r=this.tKey)||void 0===r?void 0:r.shares[t];let i=null;for(const e in s)e!==K.toString()&&(i=s[e]);if(!i)throw new Error("no metadata share found");return i}catch(e){throw t.log.error("create device share error",e),new Error(e.message)}}async deleteMetadataShareBackup(e){var t,r;await this.tKey.addLocalMetadataTransitions({input:[{message:E.SHARE_DELETED,dateAdded:Date.now()}],privKey:[e]}),null!==(t=this.tkey)&&void 0!==t&&t.manualSync||await(null===(r=this.tkey)||void 0===r?void 0:r.syncLocalMetadataTransitions())}async backupMetadataShare(e){var t,r,s;const i=await this.getMetadataShare();await(null===(t=this.tKey)||void 0===t?void 0:t.addLocalMetadataTransitions({input:[i],privKey:[e]})),null!==(r=this.tkey)&&void 0!==r&&r.manualSync||await(null===(s=this.tkey)||void 0===s?void 0:s.syncLocalMetadataTransitions())}async addFactorDescription(e,t){var r;let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const{tssIndex:a}=await this.tKey.getTSSShare(e),o=(0,E.getPubKeyPoint)(e),n=J.fromTkeyPoint(o).toBufferSEC1(!0).toString("hex"),h=H()(H()({module:t,dateAdded:Date.now()},s),{},{tssShareIndex:a});await(null===(r=this.tKey)||void 0===r?void 0:r.addShareDescription(n,JSON.stringify(h),i))}async setupProvider(){const e=new ae.EthereumSigningProvider({config:{chainConfig:this.options.chainConfig}});await e.setupProvider({sign:this.sign,getPublic:this.getPublic}),this.privKeyProvider=e}updateState(e){this.state=H()(H()({},this.state),e)}resetState(){this.tkey=null,this.privKeyProvider=null}_getOAuthKey(e){return b().getPostboxKey(e)}_getSignatures(e){return e.map((e=>JSON.stringify({data:e.token,sig:e.signature})))}async getSigningSignatures(e){if(!this.signatures)throw new Error("signatures not present");return t.log.info("data",e),this.signatures}isNodejsOrRN(e){return"nodejs"===e||"react-native"===e}}})(),module.exports=a})();
//# sourceMappingURL=mpcCoreKit.cjs.js.map